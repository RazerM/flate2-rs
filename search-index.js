var searchIndex = {};
searchIndex["flate2"] = {"doc":"A DEFLATE-based stream compression/decompression library","items":[[3,"GzBuilder","flate2","A builder structure to create a new gzip Encoder.",null,null],[3,"GzHeader","","A structure representing the header of a gzip stream.",null,null],[3,"Compress","","Raw in-memory compression stream for blocks of data.",null,null],[3,"CompressError","","Error returned when a compression object is used incorrectly or otherwise generates an error.",null,null],[3,"Decompress","","Raw in-memory decompression stream for blocks of data.",null,null],[3,"DecompressError","","Error returned when a decompression object finds that the input stream of bytes was not a valid input stream of bytes.",null,null],[3,"Crc","","The CRC calculated by a [`CrcReader`].",null,null],[3,"CrcReader","","A wrapper around a [`Read`] that calculates the CRC.",null,null],[3,"Compression","","When compressing data, the compression level can be specified by a value in this enum.",null,null],[4,"Status","","Possible status results of compressing some data or successfully decompressing a block of data.",null,null],[13,"Ok","","Indicates success.",0,null],[13,"BufError","","Indicates that forward progress is not possible due to input or output buffers being empty.",0,null],[13,"StreamEnd","","Indicates that all input has been consumed and all output bytes have been written. Decompression/compression should not be called again.",0,null],[4,"FlushCompress","","Values which indicate the form of flushing to be used when compressing in-memory data.",null,null],[13,"None","","A typical parameter for passing to compression/decompression functions, this indicates that the underlying stream to decide how much data to accumulate before producing output in order to maximize compression.",1,null],[13,"Sync","","All pending output is flushed to the output buffer and the output is aligned on a byte boundary so that the decompressor can get all input data available so far.",1,null],[13,"Partial","","All pending output is flushed to the output buffer, but the output is not aligned to a byte boundary.",1,null],[13,"Full","","All output is flushed as with `Flush::Sync` and the compression state is reset so decompression can restart from this point if previous compressed data has been damaged or if random access is desired.",1,null],[13,"Finish","","Pending input is processed and pending output is flushed.",1,null],[4,"FlushDecompress","","Values which indicate the form of flushing to be used when decompressing in-memory data.",null,null],[13,"None","","A typical parameter for passing to compression/decompression functions, this indicates that the underlying stream to decide how much data to accumulate before producing output in order to maximize compression.",2,null],[13,"Sync","","All pending output is flushed to the output buffer and the output is aligned on a byte boundary so that the decompressor can get all input data available so far.",2,null],[13,"Finish","","Pending input is processed and pending output is flushed.",2,null],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new CRC.",3,{"o":{"n":"crc"}}],[11,"sum","","bla",3,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"amount","","The number of bytes that have been used to calculate the CRC. This value is only accurate if the amount is lower than 232.",3,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"update","","Update the CRC with the bytes in `data`.",3,null],[11,"reset","","Reset the CRC.",3,{"i":[{"n":"self"}]}],[11,"combine","","Combine the CRC with the CRC for the subsequent block of bytes.",3,{"i":[{"n":"self"},{"n":"crc"}]}],[11,"new","","Create a new CrcReader.",4,{"i":[{"n":"r"}],"o":{"n":"crcreader"}}],[11,"crc","","Get the Crc for this CrcReader.",4,{"i":[{"n":"self"}],"o":{"n":"crc"}}],[11,"into_inner","","Get the reader that is wrapped by this CrcReader.",4,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"get_ref","","Get the reader that is wrapped by this CrcReader by reference.",4,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"get_mut","","Get a mutable reference to the reader that is wrapped by this CrcReader.",4,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"reset","","Reset the Crc in this CrcReader.",4,{"i":[{"n":"self"}]}],[11,"read","","",4,null],[11,"fill_buf","","",4,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"consume","","",4,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"gzheader"}],"o":{"n":"bool"}}],[11,"ne","","",5,{"i":[{"n":"self"},{"n":"gzheader"}],"o":{"n":"bool"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"gzheader"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"filename","","Returns the `filename` field of this gzip stream's header, if present.",5,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"extra","","Returns the `extra` field of this gzip stream's header, if present.",5,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"comment","","Returns the `comment` field of this gzip stream's header, if present.",5,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"operating_system","","Returns the `operating_system` field of this gzip stream's header.",5,{"i":[{"n":"self"}],"o":{"n":"u8"}}],[11,"mtime","","This gives the most recent modification time of the original file being compressed.",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"mtime_as_datetime","","Returns the most recent modification time represented by a date-time type. Returns `None` if the value of the underlying counter is 0, indicating no time stamp is available.",5,{"i":[{"n":"self"}],"o":{"g":["systemtime"],"n":"option"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new blank builder with no header by default.",6,{"o":{"n":"gzbuilder"}}],[11,"mtime","","Configure the `mtime` field in the gzip header.",6,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"gzbuilder"}}],[11,"operating_system","","Configure the `operating_system` field in the gzip header.",6,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"gzbuilder"}}],[11,"extra","","Configure the `extra` field in the gzip header.",6,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"gzbuilder"}}],[11,"filename","","Configure the `filename` field in the gzip header.",6,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"gzbuilder"}}],[11,"comment","","Configure the `comment` field in the gzip header.",6,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"gzbuilder"}}],[11,"write","","Consume this builder, creating a writer encoder in the process.",6,{"i":[{"n":"self"},{"n":"w"},{"n":"compression"}],"o":{"n":"gzencoder"}}],[11,"read","","Consume this builder, creating a reader encoder in the process.",6,{"i":[{"n":"self"},{"n":"r"},{"n":"compression"}],"o":{"n":"gzencoder"}}],[11,"buf_read","","Consume this builder, creating a reader encoder in the process.",6,{"i":[{"n":"self"},{"n":"r"},{"n":"compression"}],"o":{"n":"gzencoder"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"flushcompress"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"flushcompress"}],"o":{"n":"bool"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"flushdecompress"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"flushdecompress"}],"o":{"n":"bool"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"needs_dictionary","","Indicates whether decompression failed due to requiring a dictionary.",9,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"option"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"status"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"status"}],"o":{"n":"bool"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new object ready for compressing data that it's given.",7,{"i":[{"n":"compression"},{"n":"bool"}],"o":{"n":"compress"}}],[11,"total_in","","Returns the total number of input bytes which have been processed by this compression object.",7,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"total_out","","Returns the total number of output bytes which have been produced by this compression object.",7,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"set_dictionary","","Specifies the compression dictionary to use.",7,null],[11,"reset","","Quickly resets this compressor without having to reallocate anything.",7,{"i":[{"n":"self"}]}],[11,"set_level","","Dynamically updates the compression level.",7,{"i":[{"n":"self"},{"n":"compression"}],"o":{"g":["compresserror"],"n":"result"}}],[11,"compress","","Compresses the input data into the output, consuming only as much input as needed and writing as much output as possible.",7,null],[11,"compress_vec","","Compresses the input data into the extra space of the output, consuming only as much input as needed and writing as much output as possible.",7,null],[11,"new","","Creates a new object ready for decompressing data that it's given.",8,{"i":[{"n":"bool"}],"o":{"n":"decompress"}}],[11,"total_in","","Returns the total number of input bytes which have been processed by this decompression object.",8,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"total_out","","Returns the total number of output bytes which have been produced by this decompression object.",8,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"decompress","","Decompresses the input data into the output, consuming only as much input as needed and writing as much output as possible.",8,null],[11,"decompress_vec","","Decompresses the input data into the extra space in the output vector specified by `output`.",8,null],[11,"set_dictionary","","Specifies the decompression dictionary to use.",8,null],[11,"reset","","Performs the equivalent of replacing this decompression state with a freshly allocated copy.",8,{"i":[{"n":"self"},{"n":"bool"}]}],[11,"description","","",9,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",10,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"read","","Types which operate over [`Read`] streams, both encoders and decoders for various formats.",null,null],[3,"DeflateEncoder","flate2::read","A DEFLATE encoder, or compressor.",null,null],[3,"DeflateDecoder","","A DEFLATE decoder, or decompressor.",null,null],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",null,null],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",null,null],[3,"GzEncoder","","A gzip streaming encoder",null,null],[3,"GzDecoder","","A gzip streaming decoder",null,null],[3,"MultiGzDecoder","","A gzip streaming decoder that decodes all members of a multistream",null,null],[0,"write","flate2","Types which operate over [`Write`] streams, both encoders and decoders for various formats.",null,null],[3,"DeflateEncoder","flate2::write","A DEFLATE encoder, or compressor.",null,null],[3,"DeflateDecoder","","A DEFLATE decoder, or decompressor.",null,null],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",null,null],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",null,null],[3,"GzEncoder","","A gzip streaming encoder",null,null],[0,"bufread","flate2","Types which operate over [`BufRead`] streams, both encoders and decoders for various formats.",null,null],[3,"DeflateEncoder","flate2::bufread","A DEFLATE encoder, or compressor.",null,null],[3,"DeflateDecoder","","A DEFLATE decoder, or decompressor.",null,null],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",null,null],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",null,null],[3,"GzEncoder","","A gzip streaming encoder",null,null],[3,"GzDecoder","","A gzip streaming decoder",null,null],[3,"MultiGzDecoder","","A gzip streaming decoder that decodes all members of a multistream",null,null],[11,"clone","flate2","",11,{"i":[{"n":"self"}],"o":{"n":"compression"}}],[11,"eq","","",11,{"i":[{"n":"self"},{"n":"compression"}],"o":{"n":"bool"}}],[11,"ne","","",11,{"i":[{"n":"self"},{"n":"compression"}],"o":{"n":"bool"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new description of the compression level with an explicitly specified integer.",11,{"i":[{"n":"u32"}],"o":{"n":"compression"}}],[11,"none","","No compression is to be performed, this may actually inflate data slightly when encoding.",11,{"o":{"n":"compression"}}],[11,"fast","","Optimize for the best speed of encoding.",11,{"o":{"n":"compression"}}],[11,"best","","Optimize for the size of data being encoded.",11,{"o":{"n":"compression"}}],[11,"level","","Returns an integer representing the compression level, typically on a scale of 0-9",11,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"default","","",11,{"o":{"n":"compression"}}],[11,"fmt","flate2::bufread","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new encoder which will read uncompressed data from the given stream and emit the compressed stream.",12,{"i":[{"n":"r"},{"n":"compression"}],"o":{"n":"deflateencoder"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the input stream for another.",12,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"r"}}],[11,"get_ref","","Acquires a reference to the underlying reader",12,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream",12,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",12,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"total_in","","Returns the number of bytes that have been read into this compressor.",12,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"total_out","","Returns the number of bytes that the compressor has produced.",12,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"read","","",12,null],[11,"write","","",12,null],[11,"flush","","",12,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"shutdown","","",12,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new decoder which will decompress data read from the given stream.",13,{"i":[{"n":"r"}],"o":{"n":"deflatedecoder"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the input stream for another.",13,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"r"}}],[11,"reset_data","","Resets the state of this decoder's data",13,{"i":[{"n":"self"}]}],[11,"get_ref","","Acquires a reference to the underlying stream",13,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream",13,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",13,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",13,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",13,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"read","","",13,null],[11,"write","","",13,null],[11,"flush","","",13,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"shutdown","","",13,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"fmt","flate2::read","",14,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new encoder which will read uncompressed data from the given stream and emit the compressed stream.",14,{"i":[{"n":"r"},{"n":"compression"}],"o":{"n":"deflateencoder"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the input stream for another.",14,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"r"}}],[11,"get_ref","","Acquires a reference to the underlying reader",14,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream",14,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",14,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"total_in","","Returns the number of bytes that have been read into this compressor.",14,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"total_out","","Returns the number of bytes that the compressor has produced.",14,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"read","","",14,null],[11,"write","","",14,null],[11,"flush","","",14,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"shutdown","","",14,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new decoder which will decompress data read from the given stream.",15,{"i":[{"n":"r"}],"o":{"n":"deflatedecoder"}}],[11,"new_with_buf","","Same as `new`, but the intermediate buffer for data is specified.",15,{"i":[{"n":"r"},{"g":["u8"],"n":"vec"}],"o":{"n":"deflatedecoder"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the input stream for another.",15,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"r"}}],[11,"get_ref","","Acquires a reference to the underlying stream",15,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream",15,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",15,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",15,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",15,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"read","","",15,null],[11,"write","","",15,null],[11,"flush","","",15,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"shutdown","","",15,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"fmt","flate2::write","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new encoder which will write compressed data to the stream given at the given compression level.",16,{"i":[{"n":"w"},{"n":"compression"}],"o":{"n":"deflateencoder"}}],[11,"get_ref","","Acquires a reference to the underlying writer.",16,{"i":[{"n":"self"}],"o":{"n":"w"}}],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",16,{"i":[{"n":"self"}],"o":{"n":"w"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the output stream for another.",16,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"try_finish","","Attempt to finish this output stream, writing out final chunks of data.",16,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"finish","","Consumes this encoder, flushing the output stream.",16,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"flush_finish","","Consumes this encoder, flushing the output stream.",16,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"total_in","","Returns the number of bytes that have been written to this compresor.",16,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"total_out","","Returns the number of bytes that the compressor has produced.",16,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"write","","",16,null],[11,"flush","","",16,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"shutdown","","",16,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"read","","",16,null],[11,"fmt","","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new decoder which will write uncompressed data to the stream.",17,{"i":[{"n":"w"}],"o":{"n":"deflatedecoder"}}],[11,"get_ref","","Acquires a reference to the underlying writer.",17,{"i":[{"n":"self"}],"o":{"n":"w"}}],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",17,{"i":[{"n":"self"}],"o":{"n":"w"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the output stream for another.",17,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"try_finish","","Attempt to finish this output stream, writing out final chunks of data.",17,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"finish","","Consumes this encoder, flushing the output stream.",17,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"total_in","","Returns the number of bytes that the decompressor has consumed for decompression.",17,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"total_out","","Returns the number of bytes that the decompressor has written to its output stream.",17,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"write","","",17,null],[11,"flush","","",17,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"shutdown","","",17,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"read","","",17,null],[11,"fmt","flate2::bufread","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new encoder which will use the given compression level.",18,{"i":[{"n":"r"},{"n":"compression"}],"o":{"n":"gzencoder"}}],[11,"get_ref","","Acquires a reference to the underlying reader.",18,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying reader.",18,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"into_inner","","Returns the underlying stream, consuming this encoder",18,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"read","","",18,null],[11,"write","","",18,null],[11,"flush","","",18,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"fmt","","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new decoder from the given reader, immediately parsing the gzip header.",19,{"i":[{"n":"r"}],"o":{"n":"gzdecoder"}}],[11,"header","","Returns the header associated with this stream, if it was valid",19,{"i":[{"n":"self"}],"o":{"g":["gzheader"],"n":"option"}}],[11,"get_ref","","Acquires a reference to the underlying reader.",19,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",19,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",19,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"read","","",19,null],[11,"write","","",19,null],[11,"flush","","",19,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"fmt","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new decoder from the given reader, immediately parsing the (first) gzip header. If the gzip stream contains multiple members all will be decoded.",20,{"i":[{"n":"r"}],"o":{"n":"multigzdecoder"}}],[11,"header","","Returns the current header associated with this stream, if it's valid",20,{"i":[{"n":"self"}],"o":{"g":["gzheader"],"n":"option"}}],[11,"get_ref","","Acquires a reference to the underlying reader.",20,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",20,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",20,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"read","","",20,null],[11,"write","","",20,null],[11,"flush","","",20,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"fmt","flate2::read","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new encoder which will use the given compression level.",21,{"i":[{"n":"r"},{"n":"compression"}],"o":{"n":"gzencoder"}}],[11,"get_ref","","Acquires a reference to the underlying reader.",21,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying reader.",21,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"into_inner","","Returns the underlying stream, consuming this encoder",21,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"read","","",21,null],[11,"write","","",21,null],[11,"flush","","",21,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new decoder from the given reader, immediately parsing the gzip header.",22,{"i":[{"n":"r"}],"o":{"n":"gzdecoder"}}],[11,"header","","Returns the header associated with this stream, if it was valid.",22,{"i":[{"n":"self"}],"o":{"g":["gzheader"],"n":"option"}}],[11,"get_ref","","Acquires a reference to the underlying reader.",22,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",22,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",22,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"read","","",22,null],[11,"write","","",22,null],[11,"flush","","",22,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"fmt","","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new decoder from the given reader, immediately parsing the (first) gzip header. If the gzip stream contains multiple members all will be decoded.",23,{"i":[{"n":"r"}],"o":{"n":"multigzdecoder"}}],[11,"header","","Returns the current header associated with this stream, if it's valid.",23,{"i":[{"n":"self"}],"o":{"g":["gzheader"],"n":"option"}}],[11,"get_ref","","Acquires a reference to the underlying reader.",23,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",23,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",23,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"read","","",23,null],[11,"write","","",23,null],[11,"flush","","",23,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"fmt","flate2::write","",24,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new encoder which will use the given compression level.",24,{"i":[{"n":"w"},{"n":"compression"}],"o":{"n":"gzencoder"}}],[11,"get_ref","","Acquires a reference to the underlying writer.",24,{"i":[{"n":"self"}],"o":{"n":"w"}}],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",24,{"i":[{"n":"self"}],"o":{"n":"w"}}],[11,"try_finish","","Attempt to finish this output stream, writing out final chunks of data.",24,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"finish","","Finish encoding this stream, returning the underlying writer once the encoding is done.",24,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"write","","",24,null],[11,"flush","","",24,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"shutdown","","",24,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"read","","",24,null],[11,"drop","","",24,{"i":[{"n":"self"}]}],[11,"fmt","flate2::bufread","",25,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new encoder which will read uncompressed data from the given stream and emit the compressed stream.",25,{"i":[{"n":"r"},{"n":"compression"}],"o":{"n":"zlibencoder"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the input stream for another.",25,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"r"}}],[11,"get_ref","","Acquires a reference to the underlying reader",25,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream",25,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",25,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"total_in","","Returns the number of bytes that have been read into this compressor.",25,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"total_out","","Returns the number of bytes that the compressor has produced.",25,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"read","","",25,null],[11,"write","","",25,null],[11,"flush","","",25,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"shutdown","","",25,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"fmt","","",26,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new decoder which will decompress data read from the given stream.",26,{"i":[{"n":"r"}],"o":{"n":"zlibdecoder"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the input stream for another.",26,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"r"}}],[11,"get_ref","","Acquires a reference to the underlying stream",26,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream",26,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",26,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",26,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",26,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"read","","",26,null],[11,"write","","",26,null],[11,"flush","","",26,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"shutdown","","",26,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"fmt","flate2::read","",27,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new encoder which will read uncompressed data from the given stream and emit the compressed stream.",27,{"i":[{"n":"r"},{"n":"compression"}],"o":{"n":"zlibencoder"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the input stream for another.",27,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"r"}}],[11,"get_ref","","Acquires a reference to the underlying stream",27,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream",27,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",27,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"total_in","","Returns the number of bytes that have been read into this compressor.",27,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"total_out","","Returns the number of bytes that the compressor has produced.",27,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"read","","",27,null],[11,"write","","",27,null],[11,"flush","","",27,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"shutdown","","",27,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"fmt","","",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new decoder which will decompress data read from the given stream.",28,{"i":[{"n":"r"}],"o":{"n":"zlibdecoder"}}],[11,"new_with_buf","","Same as `new`, but the intermediate buffer for data is specified.",28,{"i":[{"n":"r"},{"g":["u8"],"n":"vec"}],"o":{"n":"zlibdecoder"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the input stream for another.",28,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"r"}}],[11,"get_ref","","Acquires a reference to the underlying stream",28,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream",28,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",28,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",28,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",28,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"read","","",28,null],[11,"write","","",28,null],[11,"flush","","",28,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"shutdown","","",28,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"fmt","flate2::write","",29,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new encoder which will write compressed data to the stream given at the given compression level.",29,{"i":[{"n":"w"},{"n":"compression"}],"o":{"n":"zlibencoder"}}],[11,"get_ref","","Acquires a reference to the underlying writer.",29,{"i":[{"n":"self"}],"o":{"n":"w"}}],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",29,{"i":[{"n":"self"}],"o":{"n":"w"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the output stream for another.",29,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"try_finish","","Attempt to finish this output stream, writing out final chunks of data.",29,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"finish","","Consumes this encoder, flushing the output stream.",29,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"flush_finish","","Consumes this encoder, flushing the output stream.",29,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"total_in","","Returns the number of bytes that have been written to this compresor.",29,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"total_out","","Returns the number of bytes that the compressor has produced.",29,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"write","","",29,null],[11,"flush","","",29,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"shutdown","","",29,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"read","","",29,null],[11,"fmt","","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new decoder which will write uncompressed data to the stream.",30,{"i":[{"n":"w"}],"o":{"n":"zlibdecoder"}}],[11,"get_ref","","Acquires a reference to the underlying writer.",30,{"i":[{"n":"self"}],"o":{"n":"w"}}],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",30,{"i":[{"n":"self"}],"o":{"n":"w"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the output stream for another.",30,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"try_finish","","Attempt to finish this output stream, writing out final chunks of data.",30,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"finish","","Consumes this encoder, flushing the output stream.",30,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"total_in","","Returns the number of bytes that the decompressor has consumed for decompression.",30,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"total_out","","Returns the number of bytes that the decompressor has written to its output stream.",30,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"write","","",30,null],[11,"flush","","",30,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"shutdown","","",30,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"read","","",30,null]],"paths":[[4,"Status"],[4,"FlushCompress"],[4,"FlushDecompress"],[3,"Crc"],[3,"CrcReader"],[3,"GzHeader"],[3,"GzBuilder"],[3,"Compress"],[3,"Decompress"],[3,"DecompressError"],[3,"CompressError"],[3,"Compression"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"GzEncoder"],[3,"GzDecoder"],[3,"MultiGzDecoder"],[3,"GzEncoder"],[3,"GzDecoder"],[3,"MultiGzDecoder"],[3,"GzEncoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"]]};
initSearch(searchIndex);
